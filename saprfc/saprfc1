package saprfc

import (
	"time"

	saprfc "github.com/sap/gorfc/gorfc"
	"simonwaldherr.de/go/golibs/arg"
	//saprfc "simonwaldherr.de/go/saprfc"
)

var SAPconnection *saprfc.Connection

func Connect() {

	arg.String("table", "T_ZMM_EKPO", "read from table", time.Second*1)
	arg.String("dest", "", "destination system", time.Second*0)
	arg.String("client", "100", "client", time.Second*0)
	arg.String("user", "xx", "username", time.Second*0)
	arg.String("pass", "xxxxx", "password", time.Second*0)
	arg.String("lang", "ZH", "language", time.Second*0)
	arg.String("host", "192.168.0.1", "SAP server", time.Second*0)
	arg.String("sysnr", "00", "SysNr", time.Second*0)
	//	arg.String("router", "/H/123.125.21.51/H/", "SAP router", time.Second*1)
	arg.Parse()

	SAPconnection, _ = saprfc.ConnectionFromParams(saprfc.ConnectionParameter{
		Dest:   arg.Get("dest").(string),
		Client: arg.Get("client").(string),
		User:   arg.Get("user").(string),
		Passwd: arg.Get("pass").(string),
		Lang:   arg.Get("lang").(string),
		Ashost: arg.Get("host").(string),
		Sysnr:  arg.Get("sysnr").(string),
		//		Saprouter: arg.Get("router").(string),
	})
	//连接SAP END

	return
}

func Close() {
	SAPconnection.Close()
}

//
/*
func request() {
	params := map[string]interface{}{
		"WERKS":      "YK01",
		"MANTR_MARK": "X",
		//		"DELIMITER":   ";",
		//		"NO_DATA":     "",
		//		"ROWSKIPS":    0,
		//		"ROWCOUNT":    5,
	}
	r, err := SAPconnection.Call("ZRFC_PPBOM_PLC", params)
	if err != nil {
		fmt.Println(err)
		//return []string{}
	}

	//	var ret []string
	/*
		echoStruct := r["DATA"].([]interface{})
		//	echoStruct := r["FIELDS"].([]interface{})
		for _, value := range echoStruct {
			values := value.(map[string]interface{})
			for _, val := range values {
				valstr := strings.Split(fmt.Sprint("%s", val), ";")
				ret = append(ret, strings.TrimSpace(valstr[1]))
			}
		}
		return ret
*/
/*echoStruct := r["IMAKT"].([]interface{})
for _, value := range echoStruct {
	values := value.(map[string]interface{})
	//		fmt.Println(len(values)) //打印行数
	//		fmt.Println(values["MATNR"])//打印某个字段的值
	//	delete(values, "MAKTX")
	//		fmt.Println(values["MATNR"])
	//		fmt.Println(values["MATNR"])
	fmt.Println(values["MAKTX"])*/

/*
			for _, val := range values {
				delete(values, "MAKTX")
				//			fmt.Println(key)
				//			fmt.Println(val)

			}

	}

}

/*
func main() {
	Connect()

	//	user := request()
	request()
	//	for _, usr := range user {
	//		fmt.Println(usr)
	//	}

	Close()
}
*/
